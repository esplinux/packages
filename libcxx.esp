name    = "libcxx"
version = "10.0.0"
rev     = "0"

load("llvmSource.esp", "LLVMSOURCE")
load("linuxHeaders.esp", "LINUXHEADERS")
load("musl.esp", "MUSL")
load("clang.esp", "CLANG")

cc = "clang" if BOOTSTRAP else CLANG.cc
cxx = "clang++" if BOOTSTRAP else CLANG.cxx

#-DLLVM_INSTALL_TOOLCHAIN_ONLY=ON \
#-DLLVM_TOOL_LLVM_RTDYLD_BUILD=OFF \
out = cmake(LLVMSOURCE, {
    "CMAKE_C_FLAGS": "-I" + LINUXHEADERS.include,
    "CMAKE_CXX_FLAGS": "-I" + LINUXHEADERS.include,
    "LLVM_DEFAULT_TARGET_TRIPLE": "x86_64-unknown-linux-musl",
    "LLVM_ENABLE_TERMINFO": "OFF",
    "LLVM_ENABLE_LIBXML2": "OFF",
    "LLVM_ENABLE_Z3_SOLVER": "OFF",
    "LLVM_ENABLE_ZLIB": "OFF",
    "LLVM_HOST_TRIPLE": "x86_64-unknown-linux-musl",
    "LLVM_INCLUDE_TESTS": "OFF",
    "LLVM_USE_LINKER": "lld",
    "LIBUNWIND_USE_COMPILER_RT": "ON",
    "LIBUNWIND_SYSROOT": MUSL.sysroot,
    "LIBUNWIND_TARGET_TRIPLE": "x86_64-unknown-linux-musl",
    "LIBCXXABI_USE_COMPILER_RT": "ON",
    "LIBCXXABI_USE_LLVM_UNWINDER": "ON",
    "LIBCXXABI_SYSROOT": MUSL.sysroot,
    "LIBCXXABI_TARGET_TRIPLE": "x86_64-unknown-linux-musl",
    "LIBCXX_USE_COMPILER_RT": "ON \
    "LIBCXX_HAS_MUSL_LIBC": "ON",
    "LIBCXX_SYSROOT": MUSL.sysroot,
    "LIBCXX_TARGET_TRIPLE": "x86_64-unknown-linux-musl",
    "LLVM_ENABLE_PROJECTS": "libunwind;libcxxabi;libcxx"
  }, % (LINUXHEADERS.include, LINUXHEADERS.include, MUSL.sysroot, MUSL.sysroot, MUSL.sysroot), 
  target="install-unwind, install-cxxabi, install-cxx")

LIBCXX = struct(
  name    = name, 
  version = version, 
  rev     = rev,
  package = tarball(out, name, version, rev)
:)
