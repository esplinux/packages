name    = "clang" 
version = "10.0.0" 
rev     = "0"

load("host.esp", "HOST")

source = fetch("https://github.com/llvm/llvm-project/releases/download/llvmorg-%s/clang-%s.src.tar.xz" % (version, version))

load("llvm.esp", "LLVM")

ldflags = "-w -s --static" if BOOTSTRAP else "-w -s"
static = "ON" if BOOTSTRAP else "OFF"
dylib = "OFF" if BOOTSTRAP else "ON"
#lib = LLVM_DEV.lib if BOOTSTRAP else LLVM.lib

out = cmake(source, {
  "CMAKE_ADDR2LINE": HOST.addr2line,
  "CMAKE_AR": HOST.ar,
  "CMAKE_C_COMPILER": HOST.cc,
  "CMAKE_CXX_COMPILER": HOST.cxx,
  "CMAKE_EXE_LINKER_FLAGS": ldflags,
  "CMAKE_LINKER": HOST.ld,
  "CMAKE_NM": HOST.nm,
  "CMAKE_OBJCOPY": HOST.objcopy,
  "CMAKE_OBJDUMP": HOST.objdump,
  "CMAKE_RANLIB": HOST.ranlib,
  "CMAKE_READELF": HOST.readelf,
  "CMAKE_STRIP": HOST.strip,
  "LLVM_BUILD_STATIC": static,
  "LLVM_CONFIG_PATH": LLVM.config,
  "LLVM_DIR": LLVM.lib + "/cmake/llvm",
  "LLVM_ENABLE_LLD": "ON",
  "LLVM_ENABLE_RTTI": "ON",
  "LLVM_LIBRARY_DIR": LLVM.lib,
  "LLVM_MAIN_INCLUDE_DIR": LLVM.include,
  "LLVM_TABLEGEN_EXE": LLVM.tblgen,
  "LlVM_TOOLS_BINARY_DIR": LLVM.bin,
  "CLANG_DEFAULT_LINKER": "lld",
  "CLANG_DEFAULT_RTLIB": "compiler-rt",
  "CLANG_DEFAULT_UNWINDLIB": "libunwind",
  "CLANG_DEFAULT_CXX_STDLIB": "libc++",
  "CLANG_LINK_CLANG_DYLIB": dylib,
  "LIBCLANG_BUILD_STATIC": "ON",
}, target="install-clang-stripped install-clang-resource-headers-stripped")

CLANG = struct(
  name    = name, 
  version = version, 
  rev     = rev,
  package = tarball(name, version, rev, out),
  cc      = out + "/bin/clang",
  cxx     = out + "/bin/clang++"
)
