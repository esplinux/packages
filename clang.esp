name    = "clang" 
version = "10.0.0" 
rev     = "0"

load("llvmSource.esp", "LLVMSOURCE")

static = "ON" if BOOTSTRAP else "OFF"

build = path("clang-build")
shell("mkdir %s" % build)
shell("""cd %s; cmake %s \
    -DCMAKE_INSTALL_PREFIX='' \
    -DCMAKE_BUILD_TYPE=MinSizeRel \
    -DCMAKE_ASM_COMPILER=clang \
    -DCMAKE_C_COMPILER=clang \
    -DCMAKE_CXX_COMPILER=clang++ \
    -DLLVM_BUILD_STATIC=ON \
    -DLLVM_ENABLE_ASSERTIONS=ON \
    -DLLVM_ENABLE_EH=ON \
    -DLLVM_ENABLE_LIBEDIT=OFF \
    -DLLVM_ENABLE_LIBXML2=OFF \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_TERMINFO=OFF \
    -DLLVM_ENABLE_Z3_SOLVER=OFF \
    -DLLVM_ENABLE_ZLIB=OFF \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=%s \
    -DCLANG_DEFAULT_LINKER=lld \
    -DCLANG_DEFAULT_RTLIB=compiler-rt \
    -DCLANG_DEFAULT_UNWINDLIB=libunwind \
    -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
    -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
    -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
    -DCOMPILER_RT_BUILD_SANITIZERS=OFF \
    -DCOMPILER_RT_BUILD_XRAY=OFF \
    -DLLVM_ENABLE_PROJECTS="clang;clang-resource-headers;compiler-rt" \
    -DLLVM_DISTRIBUTION_COMPONENTS="clang;clang-resource-headers;compiler-rt"
""" % (build, LLVMSOURCE, static))

out = path("clang-out")
make(build, "-j %s install-distribution-stripped" % NPROC, env={
  "DESTDIR" : out
})

CLANG = struct(
  name    = name, 
  version = version, 
  rev     = rev,
  package = tarball(out, name, version, rev),
  cc      = out + "/bin/clang",
  cxx     = out + "/bin/clang++"
)
