##############################################################################
# You should only have to change items below here if you are developing a new
# new version of esp/bootstrap or porting to a new architecture
##############################################################################

# Defaults inherited by included build files
##############################################################################
TARFLAGS = $$( [ -z '$TARFLAGS' ] && printf 'xz' || printf %s '$TARFLAGS' )
NPROC = $$( [ -z '$NPROC' ] && nproc || printf %s '$NPROC' )

# Constants for rules
##############################################################################
CURL_FLAGS = --connect-timeout 3 --retry 3 --retry-delay 1 -L -s -S

# Default build rules
##############################################################################

rule gobuild
  command = mkdir -p $out/bin; $
    cd $$(dirname $in); go build $$(basename $in); $
    cp $$(basename $in | sed 's/.go$$//') ../$out/bin

rule curl
  command = mkdir -p $$(dirname $out); $
    curl $CURL_FLAGS $URL -o $out

rule download
  description = Downloading ${PACKAGE}
  command = curl $CURL_FLAGS $URL| tar $TARFLAGS; $
    if [ -f '${PACKAGE}-${VERSION}.patch' ]; then $
      patch -p1 -i '${PACKAGE}-${VERSION}.patch'; $
    fi

rule clone
  description = Cloning ${PACKAGE}
  command = git clone -q --depth=1 $URL ${PACKAGE}-${VERSION}; $
    if [ -f '${PACKAGE}-${VERSION}.patch' ]; then $
      patch -p1 -i '${PACKAGE}-${VERSION}.patch'; $
    fi

rule dev
  command = mkdir -p dev/lib; $
    find out/lib -name *.a -exec mv {} dev/lib \; ; $
    find out/lib -name *.o -exec mv {} dev/lib \; ; $
    find out/lib -name *.la -exec mv {} dev/lib \; ; $
    test -d out/include && mv out/include dev/include; $
    test -d out/lib/pkgconfig && mv out/lib/pkgconfig dev/lib; $
    test "$$(ls -A out/lib)" || rmdir out/lib; $

rule package
  description = Packaging ${PACKAGE} $out
  command = cd $in; tar -czf ../$out .; cd ..

# CONFIGURE_OPTS is a hack until we sort out bootstrapping static builds better
rule configure
  description = Configuring ${PACKAGE}
  command = mkdir -p $out; cd $out; $prefix ../$in $opts $$CONFIGURE_OPTS

# MAKE_OPTS is a hack until we sort out bootstrapping static builds better
rule make
  description = Building ${PACKAGE}
  command = $prefix make -j$NPROC -C $in $target $$MAKE_OPTS

# CMAKEE_OPTS is a hack until we sort out bootstrapping static builds better
rule cmake
  description = Building ${PACKAGE}
  command = $prefix cmake -B$out -S$in $opts $$CMAKE_OPTS

rule mkdir
  command = mkdir $out

rule cp
  command = cp $in $out

rule mv
  command = mv $mv $out

rule rm
  command = rm -rf $rm

rule patch
  command = patch -p1 -i $in
